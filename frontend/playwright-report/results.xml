<testsuites id="" name="" tests="120" failures="116" skipped="4" errors="0" time="141.90138199999998">
<testsuite name="error-reporting.spec.ts" timestamp="2025-09-03T08:14:21.835Z" hostname="chromium" tests="24" failures="24" skipped="0" time="372.658" errors="0">
<testcase name="Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow" classname="error-reporting.spec.ts" time="13.84">
<failure message="error-reporting.spec.ts:70:3 should complete the full 5-step error reporting workflow" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:70:3 › Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle multiple text selections" classname="error-reporting.spec.ts" time="13.808">
<failure message="error-reporting.spec.ts:149:3 should handle multiple text selections" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:149:3 › Complete Error Reporting Workflow › should handle multiple text selections 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should set error severity levels" classname="error-reporting.spec.ts" time="13.696">
<failure message="error-reporting.spec.ts:177:3 should set error severity levels" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:177:3 › Complete Error Reporting Workflow › should set error severity levels 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should add error descriptions and comments" classname="error-reporting.spec.ts" time="13.603">
<failure message="error-reporting.spec.ts:195:3 should add error descriptions and comments" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:195:3 › Complete Error Reporting Workflow › should add error descriptions and comments 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should submit error reports successfully" classname="error-reporting.spec.ts" time="13.811">
<failure message="error-reporting.spec.ts:207:3 should submit error reports successfully" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:207:3 › Complete Error Reporting Workflow › should submit error reports successfully 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="13.629">
<failure message="error-reporting.spec.ts:242:3 should validate required fields" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:242:3 › Complete Error Reporting Workflow › should validate required fields 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should save error reports as drafts" classname="error-reporting.spec.ts" time="13.763">
<failure message="error-reporting.spec.ts:254:3 should save error reports as drafts" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:254:3 › Complete Error Reporting Workflow › should save error reports as drafts 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support text highlighting and annotation" classname="error-reporting.spec.ts" time="13.73">
<failure message="error-reporting.spec.ts:271:3 should support text highlighting and annotation" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:271:3 › Complete Error Reporting Workflow › should support text highlighting and annotation 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should display error history and previous reports" classname="error-reporting.spec.ts" time="13.319">
<failure message="error-reporting.spec.ts:294:3 should display error history and previous reports" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:294:3 › Complete Error Reporting Workflow › should display error history and previous reports 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support error report filtering and search" classname="error-reporting.spec.ts" time="13.5">
<failure message="error-reporting.spec.ts:306:3 should support error report filtering and search" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:306:3 › Complete Error Reporting Workflow › should support error report filtering and search 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle file attachments for error context" classname="error-reporting.spec.ts" time="13.521">
<failure message="error-reporting.spec.ts:327:3 should handle file attachments for error context" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:327:3 › Complete Error Reporting Workflow › should handle file attachments for error context 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should provide error reporting analytics" classname="error-reporting.spec.ts" time="13.525">
<failure message="error-reporting.spec.ts:347:3 should provide error reporting analytics" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:347:3 › Complete Error Reporting Workflow › should provide error reporting analytics 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support collaborative error review" classname="error-reporting.spec.ts" time="13.578">
<failure message="error-reporting.spec.ts:359:3 should support collaborative error review" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:359:3 › Complete Error Reporting Workflow › should support collaborative error review 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle error reporting in different languages" classname="error-reporting.spec.ts" time="13.416">
<failure message="error-reporting.spec.ts:371:3 should handle error reporting in different languages" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:371:3 › Complete Error Reporting Workflow › should handle error reporting in different languages 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components" classname="error-reporting.spec.ts" time="13.531">
<failure message="error-reporting.spec.ts:504:3 completes full error reporting workflow with enhanced components" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:504:3 › Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('Report ASR Error')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('Report ASR Error')


      397 |   async function navigateToErrorReporting(page: any) {
      398 |     await page.goto('/error-reporting');
    > 399 |     await expect(page.getByText('Report ASR Error')).toBeVisible();
          |                                                      ^
      400 |   }
      401 |
      402 |   async function selectTextInDocument(page: any, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:399:54)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:505:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › supports voice input functionality" classname="error-reporting.spec.ts" time="13.435">
<failure message="error-reporting.spec.ts:583:3 supports voice input functionality" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:583:3 › Enhanced Error Reporting Workflow › supports voice input functionality 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('Report ASR Error')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('Report ASR Error')


      397 |   async function navigateToErrorReporting(page: any) {
      398 |     await page.goto('/error-reporting');
    > 399 |     await expect(page.getByText('Report ASR Error')).toBeVisible();
          |                                                      ^
      400 |   }
      401 |
      402 |   async function selectTextInDocument(page: any, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:399:54)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:587:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-chromium/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-chromium/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-chromium/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="5.736">
<failure message="error-reporting.spec.ts:604:3 should validate required fields" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:604:3 › Enhanced Error Reporting Workflow › should validate required fields 

    Error: expect(locator).toBeDisabled() failed

    Locator:  getByRole('button', { name: /next/i })
    Expected: disabled
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeDisabled" with timeout 5000ms
      - waiting for getByRole('button', { name: /next/i })


      605 |     // Try to proceed without text selection
      606 |     const nextButton = page.getByRole('button', { name: /next/i });
    > 607 |     await expect(nextButton).toBeDisabled();
          |                              ^
      608 |
      609 |     // Make text selection
      610 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:607:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support voice input functionality" classname="error-reporting.spec.ts" time="32.986">
<failure message="error-reporting.spec.ts:632:3 should support voice input functionality" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:632:3 › Enhanced Error Reporting Workflow › should support voice input functionality 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:637:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle text-to-speech functionality" classname="error-reporting.spec.ts" time="33.03">
<failure message="error-reporting.spec.ts:653:3 should handle text-to-speech functionality" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:653:3 › Enhanced Error Reporting Workflow › should handle text-to-speech functionality 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:655:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support keyboard navigation" classname="error-reporting.spec.ts" time="5.797">
<failure message="error-reporting.spec.ts:678:3 should support keyboard navigation" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:678:3 › Enhanced Error Reporting Workflow › should support keyboard navigation 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      682 |     // Should focus on first interactive element
      683 |     const focusedElement = page.locator(':focus');
    > 684 |     await expect(focusedElement).toBeVisible();
          |                                  ^
      685 |
      686 |     // Test Escape key to clear selections
      687 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:684:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle form cancellation" classname="error-reporting.spec.ts" time="33.012">
<failure message="error-reporting.spec.ts:694:3 should handle form cancellation" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:694:3 › Enhanced Error Reporting Workflow › should handle form cancellation 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:696:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should display error messages for API failures" classname="error-reporting.spec.ts" time="33.041">
<failure message="error-reporting.spec.ts:708:3 should display error messages for API failures" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:708:3 › Enhanced Error Reporting Workflow › should display error messages for API failures 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:710:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support responsive design on mobile" classname="error-reporting.spec.ts" time="5.644">
<failure message="error-reporting.spec.ts:725:3 should support responsive design on mobile" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:725:3 › Enhanced Error Reporting Workflow › should support responsive design on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      728 |
      729 |     // Should show mobile-optimized layout
    > 730 |     await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
          |                                                                ^
      731 |
      732 |     // Touch selection should work
      733 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:730:64

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-chromium/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should maintain accessibility standards" classname="error-reporting.spec.ts" time="5.707">
<failure message="error-reporting.spec.ts:743:3 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [chromium] › error-reporting.spec.ts:743:3 › Enhanced Error Reporting Workflow › should maintain accessibility standards 

    Error: expect(locator).toHaveText(expected) failed

    Locator: getByRole('heading', { level: 3 })
    Expected string: "ASR Error Reporting System"
    Received: <element(s) not found>
    Timeout: 5000ms

    Call log:
      - Expect "toHaveText" with timeout 5000ms
      - waiting for getByRole('heading', { level: 3 })


      743 |   test('should maintain accessibility standards', async ({ page }) => {
      744 |     // Check for proper heading structure
    > 745 |     await expect(page.getByRole('heading', { level: 3 })).toHaveText('ASR Error Reporting System');
          |                                                           ^
      746 |
      747 |     // Check for proper form labels
      748 |     const textSelectionArea = page.locator('[role="textbox"], [aria-label*="text selection"]');
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:745:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-chromium/video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="error-reporting.spec.ts" timestamp="2025-09-03T08:14:21.835Z" hostname="firefox" tests="24" failures="24" skipped="0" time="266.643" errors="0">
<testcase name="Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow" classname="error-reporting.spec.ts" time="9.721">
<failure message="error-reporting.spec.ts:70:3 should complete the full 5-step error reporting workflow" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:70:3 › Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle multiple text selections" classname="error-reporting.spec.ts" time="9.76">
<failure message="error-reporting.spec.ts:149:3 should handle multiple text selections" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:149:3 › Complete Error Reporting Workflow › should handle multiple text selections 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should set error severity levels" classname="error-reporting.spec.ts" time="9.71">
<failure message="error-reporting.spec.ts:177:3 should set error severity levels" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:177:3 › Complete Error Reporting Workflow › should set error severity levels 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should add error descriptions and comments" classname="error-reporting.spec.ts" time="9.81">
<failure message="error-reporting.spec.ts:195:3 should add error descriptions and comments" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:195:3 › Complete Error Reporting Workflow › should add error descriptions and comments 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should submit error reports successfully" classname="error-reporting.spec.ts" time="9.447">
<failure message="error-reporting.spec.ts:207:3 should submit error reports successfully" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:207:3 › Complete Error Reporting Workflow › should submit error reports successfully 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="9.497">
<failure message="error-reporting.spec.ts:242:3 should validate required fields" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:242:3 › Complete Error Reporting Workflow › should validate required fields 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should save error reports as drafts" classname="error-reporting.spec.ts" time="9.43">
<failure message="error-reporting.spec.ts:254:3 should save error reports as drafts" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:254:3 › Complete Error Reporting Workflow › should save error reports as drafts 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support text highlighting and annotation" classname="error-reporting.spec.ts" time="9.407">
<failure message="error-reporting.spec.ts:271:3 should support text highlighting and annotation" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:271:3 › Complete Error Reporting Workflow › should support text highlighting and annotation 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should display error history and previous reports" classname="error-reporting.spec.ts" time="10.197">
<failure message="error-reporting.spec.ts:294:3 should display error history and previous reports" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:294:3 › Complete Error Reporting Workflow › should display error history and previous reports 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support error report filtering and search" classname="error-reporting.spec.ts" time="10.391">
<failure message="error-reporting.spec.ts:306:3 should support error report filtering and search" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:306:3 › Complete Error Reporting Workflow › should support error report filtering and search 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle file attachments for error context" classname="error-reporting.spec.ts" time="10.337">
<failure message="error-reporting.spec.ts:327:3 should handle file attachments for error context" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:327:3 › Complete Error Reporting Workflow › should handle file attachments for error context 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should provide error reporting analytics" classname="error-reporting.spec.ts" time="10.237">
<failure message="error-reporting.spec.ts:347:3 should provide error reporting analytics" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:347:3 › Complete Error Reporting Workflow › should provide error reporting analytics 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support collaborative error review" classname="error-reporting.spec.ts" time="10.271">
<failure message="error-reporting.spec.ts:359:3 should support collaborative error review" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:359:3 › Complete Error Reporting Workflow › should support collaborative error review 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle error reporting in different languages" classname="error-reporting.spec.ts" time="10.332">
<failure message="error-reporting.spec.ts:371:3 should handle error reporting in different languages" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:371:3 › Complete Error Reporting Workflow › should handle error reporting in different languages 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components" classname="error-reporting.spec.ts" time="10.406">
<failure message="error-reporting.spec.ts:504:3 completes full error reporting workflow with enhanced components" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:504:3 › Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('Report ASR Error')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('Report ASR Error')


      397 |   async function navigateToErrorReporting(page: any) {
      398 |     await page.goto('/error-reporting');
    > 399 |     await expect(page.getByText('Report ASR Error')).toBeVisible();
          |                                                      ^
      400 |   }
      401 |
      402 |   async function selectTextInDocument(page: any, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:399:54)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:505:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-firefox/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-firefox/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-firefox/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › supports voice input functionality" classname="error-reporting.spec.ts" time="1.791">
<failure message="error-reporting.spec.ts:583:3 supports voice input functionality" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:583:3 › Enhanced Error Reporting Workflow › supports voice input functionality 

    Error: browserContext.grantPermissions: Unknown permission: microphone

      583 |   test('supports voice input functionality', async ({ page }) => {
      584 |     // Grant microphone permissions
    > 585 |     await page.context().grantPermissions(['microphone']);
          |                          ^
      586 |
      587 |     await navigateToErrorReporting(page);
      588 |
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:585:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="6.061">
<failure message="error-reporting.spec.ts:604:3 should validate required fields" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:604:3 › Enhanced Error Reporting Workflow › should validate required fields 

    Error: expect(locator).toBeDisabled() failed

    Locator:  getByRole('button', { name: /next/i })
    Expected: disabled
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeDisabled" with timeout 5000ms
      - waiting for getByRole('button', { name: /next/i })


      605 |     // Try to proceed without text selection
      606 |     const nextButton = page.getByRole('button', { name: /next/i });
    > 607 |     await expect(nextButton).toBeDisabled();
          |                              ^
      608 |
      609 |     // Make text selection
      610 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:607:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support voice input functionality" classname="error-reporting.spec.ts" time="1.224">
<failure message="error-reporting.spec.ts:632:3 should support voice input functionality" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:632:3 › Enhanced Error Reporting Workflow › should support voice input functionality 

    Error: browserContext.grantPermissions: Unknown permission: microphone

      632 |   test('should support voice input functionality', async ({ page }) => {
      633 |     // Grant microphone permissions
    > 634 |     await page.context().grantPermissions(['microphone']);
          |                          ^
      635 |
      636 |     // Navigate to correction step
      637 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:634:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-4c844-t-voice-input-functionality-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle text-to-speech functionality" classname="error-reporting.spec.ts" time="30.075">
<failure message="error-reporting.spec.ts:653:3 should handle text-to-speech functionality" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:653:3 › Enhanced Error Reporting Workflow › should handle text-to-speech functionality 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:655:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-58b87-ext-to-speech-functionality-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support keyboard navigation" classname="error-reporting.spec.ts" time="6.179">
<failure message="error-reporting.spec.ts:678:3 should support keyboard navigation" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:678:3 › Enhanced Error Reporting Workflow › should support keyboard navigation 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      682 |     // Should focus on first interactive element
      683 |     const focusedElement = page.locator(':focus');
    > 684 |     await expect(focusedElement).toBeVisible();
          |                                  ^
      685 |
      686 |     // Test Escape key to clear selections
      687 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:684:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle form cancellation" classname="error-reporting.spec.ts" time="30.07">
<failure message="error-reporting.spec.ts:694:3 should handle form cancellation" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:694:3 › Enhanced Error Reporting Workflow › should handle form cancellation 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:696:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-08aac-ld-handle-form-cancellation-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should display error messages for API failures" classname="error-reporting.spec.ts" time="30.071">
<failure message="error-reporting.spec.ts:708:3 should display error messages for API failures" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:708:3 › Enhanced Error Reporting Workflow › should display error messages for API failures 

    Test timeout of 30000ms exceeded.

    Error: locator.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for getByTestId('selectable-text')


      402 |   async function selectTextInDocument(page: any, text: string) {
      403 |     const textContainer = page.getByTestId('selectable-text');
    > 404 |     await textContainer.click();
          |                         ^
      405 |
      406 |     // Simulate text selection by finding and selecting the text
      407 |     await page.evaluate((textToSelect: string) => {
        at selectTextInDocument (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:404:25)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:710:11

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e0b68-r-messages-for-API-failures-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support responsive design on mobile" classname="error-reporting.spec.ts" time="6.099">
<failure message="error-reporting.spec.ts:725:3 should support responsive design on mobile" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:725:3 › Enhanced Error Reporting Workflow › should support responsive design on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      728 |
      729 |     // Should show mobile-optimized layout
    > 730 |     await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
          |                                                                ^
      731 |
      732 |     // Touch selection should work
      733 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:730:64

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-firefox/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should maintain accessibility standards" classname="error-reporting.spec.ts" time="6.12">
<failure message="error-reporting.spec.ts:743:3 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [firefox] › error-reporting.spec.ts:743:3 › Enhanced Error Reporting Workflow › should maintain accessibility standards 

    Error: expect(locator).toHaveText(expected) failed

    Locator: getByRole('heading', { level: 3 })
    Expected string: "ASR Error Reporting System"
    Received: <element(s) not found>
    Timeout: 5000ms

    Call log:
      - Expect "toHaveText" with timeout 5000ms
      - waiting for getByRole('heading', { level: 3 })


      743 |   test('should maintain accessibility standards', async ({ page }) => {
      744 |     // Check for proper heading structure
    > 745 |     await expect(page.getByRole('heading', { level: 3 })).toHaveText('ASR Error Reporting System');
          |                                                           ^
      746 |
      747 |     // Check for proper form labels
      748 |     const textSelectionArea = page.locator('[role="textbox"], [aria-label*="text selection"]');
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:745:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-firefox/video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="error-reporting.spec.ts" timestamp="2025-09-03T08:14:21.835Z" hostname="webkit" tests="24" failures="24" skipped="0" time="0.098" errors="0">
<testcase name="Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:70:3 should complete the full 5-step error reporting workflow" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:70:3 › Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle multiple text selections" classname="error-reporting.spec.ts" time="0.006">
<failure message="error-reporting.spec.ts:149:3 should handle multiple text selections" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:149:3 › Complete Error Reporting Workflow › should handle multiple text selections 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should set error severity levels" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:177:3 should set error severity levels" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:177:3 › Complete Error Reporting Workflow › should set error severity levels 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should add error descriptions and comments" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:195:3 should add error descriptions and comments" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:195:3 › Complete Error Reporting Workflow › should add error descriptions and comments 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should submit error reports successfully" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:207:3 should submit error reports successfully" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:207:3 › Complete Error Reporting Workflow › should submit error reports successfully 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:242:3 should validate required fields" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:242:3 › Complete Error Reporting Workflow › should validate required fields 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should save error reports as drafts" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:254:3 should save error reports as drafts" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:254:3 › Complete Error Reporting Workflow › should save error reports as drafts 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support text highlighting and annotation" classname="error-reporting.spec.ts" time="0.005">
<failure message="error-reporting.spec.ts:271:3 should support text highlighting and annotation" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:271:3 › Complete Error Reporting Workflow › should support text highlighting and annotation 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should display error history and previous reports" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:294:3 should display error history and previous reports" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:294:3 › Complete Error Reporting Workflow › should display error history and previous reports 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support error report filtering and search" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:306:3 should support error report filtering and search" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:306:3 › Complete Error Reporting Workflow › should support error report filtering and search 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle file attachments for error context" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:327:3 should handle file attachments for error context" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:327:3 › Complete Error Reporting Workflow › should handle file attachments for error context 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should provide error reporting analytics" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:347:3 should provide error reporting analytics" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:347:3 › Complete Error Reporting Workflow › should provide error reporting analytics 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support collaborative error review" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:359:3 should support collaborative error review" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:359:3 › Complete Error Reporting Workflow › should support collaborative error review 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle error reporting in different languages" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:371:3 should handle error reporting in different languages" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:371:3 › Complete Error Reporting Workflow › should handle error reporting in different languages 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:504:3 completes full error reporting workflow with enhanced components" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:504:3 › Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › supports voice input functionality" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:583:3 supports voice input functionality" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:583:3 › Enhanced Error Reporting Workflow › supports voice input functionality 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:604:3 should validate required fields" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:604:3 › Enhanced Error Reporting Workflow › should validate required fields 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support voice input functionality" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:632:3 should support voice input functionality" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:632:3 › Enhanced Error Reporting Workflow › should support voice input functionality 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle text-to-speech functionality" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:653:3 should handle text-to-speech functionality" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:653:3 › Enhanced Error Reporting Workflow › should handle text-to-speech functionality 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support keyboard navigation" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:678:3 should support keyboard navigation" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:678:3 › Enhanced Error Reporting Workflow › should support keyboard navigation 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle form cancellation" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:694:3 should handle form cancellation" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:694:3 › Enhanced Error Reporting Workflow › should handle form cancellation 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should display error messages for API failures" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:708:3 should display error messages for API failures" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:708:3 › Enhanced Error Reporting Workflow › should display error messages for API failures 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support responsive design on mobile" classname="error-reporting.spec.ts" time="0.005">
<failure message="error-reporting.spec.ts:725:3 should support responsive design on mobile" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:725:3 › Enhanced Error Reporting Workflow › should support responsive design on mobile 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should maintain accessibility standards" classname="error-reporting.spec.ts" time="0.005">
<failure message="error-reporting.spec.ts:743:3 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [webkit] › error-reporting.spec.ts:743:3 › Enhanced Error Reporting Workflow › should maintain accessibility standards 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="error-reporting.spec.ts" timestamp="2025-09-03T08:14:21.835Z" hostname="Mobile Chrome" tests="24" failures="20" skipped="4" time="322.23" errors="0">
<testcase name="Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow" classname="error-reporting.spec.ts" time="13.403">
<failure message="error-reporting.spec.ts:70:3 should complete the full 5-step error reporting workflow" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:70:3 › Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-60fad-ep-error-reporting-workflow-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle multiple text selections" classname="error-reporting.spec.ts" time="13.334">
<failure message="error-reporting.spec.ts:149:3 should handle multiple text selections" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:149:3 › Complete Error Reporting Workflow › should handle multiple text selections 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-7cad8-le-multiple-text-selections-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should set error severity levels" classname="error-reporting.spec.ts" time="13.405">
<failure message="error-reporting.spec.ts:177:3 should set error severity levels" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:177:3 › Complete Error Reporting Workflow › should set error severity levels 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-9074f-d-set-error-severity-levels-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should add error descriptions and comments" classname="error-reporting.spec.ts" time="12.404">
<failure message="error-reporting.spec.ts:195:3 should add error descriptions and comments" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:195:3 › Complete Error Reporting Workflow › should add error descriptions and comments 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-a3a40-r-descriptions-and-comments-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should submit error reports successfully" classname="error-reporting.spec.ts" time="13.383">
<failure message="error-reporting.spec.ts:207:3 should submit error reports successfully" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:207:3 › Complete Error Reporting Workflow › should submit error reports successfully 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-c7555--error-reports-successfully-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="13.215">
<failure message="error-reporting.spec.ts:242:3 should validate required fields" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:242:3 › Complete Error Reporting Workflow › should validate required fields 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-f691b-ld-validate-required-fields-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should save error reports as drafts" classname="error-reporting.spec.ts" time="13.277">
<failure message="error-reporting.spec.ts:254:3 should save error reports as drafts" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:254:3 › Complete Error Reporting Workflow › should save error reports as drafts 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-61c13-ave-error-reports-as-drafts-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support text highlighting and annotation" classname="error-reporting.spec.ts" time="13.189">
<failure message="error-reporting.spec.ts:271:3 should support text highlighting and annotation" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:271:3 › Complete Error Reporting Workflow › should support text highlighting and annotation 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-707e0-highlighting-and-annotation-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should display error history and previous reports" classname="error-reporting.spec.ts" time="13.268">
<failure message="error-reporting.spec.ts:294:3 should display error history and previous reports" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:294:3 › Complete Error Reporting Workflow › should display error history and previous reports 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-5c70f-istory-and-previous-reports-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support error report filtering and search" classname="error-reporting.spec.ts" time="13.181">
<failure message="error-reporting.spec.ts:306:3 should support error report filtering and search" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:306:3 › Complete Error Reporting Workflow › should support error report filtering and search 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-bf7be-report-filtering-and-search-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle file attachments for error context" classname="error-reporting.spec.ts" time="11.141">
<failure message="error-reporting.spec.ts:327:3 should handle file attachments for error context" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:327:3 › Complete Error Reporting Workflow › should handle file attachments for error context 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-b59be-tachments-for-error-context-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should provide error reporting analytics" classname="error-reporting.spec.ts" time="11.124">
<failure message="error-reporting.spec.ts:347:3 should provide error reporting analytics" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:347:3 › Complete Error Reporting Workflow › should provide error reporting analytics 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-fbf48-e-error-reporting-analytics-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support collaborative error review" classname="error-reporting.spec.ts" time="11.983">
<failure message="error-reporting.spec.ts:359:3 should support collaborative error review" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:359:3 › Complete Error Reporting Workflow › should support collaborative error review 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-07465--collaborative-error-review-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-07465--collaborative-error-review-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle error reporting in different languages" classname="error-reporting.spec.ts" time="12.145">
<failure message="error-reporting.spec.ts:371:3 should handle error reporting in different languages" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:371:3 › Complete Error Reporting Workflow › should handle error reporting in different languages 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      19 | async function navigateToErrorReporting(page: Page) {
      20 |   await page.goto('/error-reporting');
    > 21 |   await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
         |                                                              ^
      22 | }
      23 |
      24 | async function selectTextInDocument(page: Page, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:21:62)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:67:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Complete-E-610d0-ting-in-different-languages-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components" classname="error-reporting.spec.ts" time="13.069">
<failure message="error-reporting.spec.ts:504:3 completes full error reporting workflow with enhanced components" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:504:3 › Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('Report ASR Error')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('Report ASR Error')


      397 |   async function navigateToErrorReporting(page: any) {
      398 |     await page.goto('/error-reporting');
    > 399 |     await expect(page.getByText('Report ASR Error')).toBeVisible();
          |                                                      ^
      400 |   }
      401 |
      402 |   async function selectTextInDocument(page: any, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:399:54)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:505:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-7d629-ow-with-enhanced-components-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › supports voice input functionality" classname="error-reporting.spec.ts" time="12.159">
<failure message="error-reporting.spec.ts:583:3 supports voice input functionality" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:583:3 › Enhanced Error Reporting Workflow › supports voice input functionality 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('Report ASR Error')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('Report ASR Error')


      397 |   async function navigateToErrorReporting(page: any) {
      398 |     await page.goto('/error-reporting');
    > 399 |     await expect(page.getByText('Report ASR Error')).toBeVisible();
          |                                                      ^
      400 |   }
      401 |
      402 |   async function selectTextInDocument(page: any, text: string) {
        at navigateToErrorReporting (/home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:399:54)
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:587:5

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-Mobile-Chrome/error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-Mobile-Chrome/video.webm]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-e4bf9-s-voice-input-functionality-Mobile-Chrome/error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="5.668">
<failure message="error-reporting.spec.ts:604:3 should validate required fields" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:604:3 › Enhanced Error Reporting Workflow › should validate required fields 

    Error: expect(locator).toBeDisabled() failed

    Locator:  getByRole('button', { name: /next/i })
    Expected: disabled
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeDisabled" with timeout 5000ms
      - waiting for getByRole('button', { name: /next/i })


      605 |     // Try to proceed without text selection
      606 |     const nextButton = page.getByRole('button', { name: /next/i });
    > 607 |     await expect(nextButton).toBeDisabled();
          |                              ^
      608 |
      609 |     // Make text selection
      610 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:607:30

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-390c4-ld-validate-required-fields-Mobile-Chrome/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support voice input functionality" classname="error-reporting.spec.ts" time="27.458">
<skipped>
</skipped>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle text-to-speech functionality" classname="error-reporting.spec.ts" time="25.484">
<skipped>
</skipped>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support keyboard navigation" classname="error-reporting.spec.ts" time="5.604">
<failure message="error-reporting.spec.ts:678:3 should support keyboard navigation" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:678:3 › Enhanced Error Reporting Workflow › should support keyboard navigation 

    Error: expect(locator).toBeVisible() failed

    Locator:  locator(':focus')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator(':focus')


      682 |     // Should focus on first interactive element
      683 |     const focusedElement = page.locator(':focus');
    > 684 |     await expect(focusedElement).toBeVisible();
          |                                  ^
      685 |
      686 |     // Test Escape key to clear selections
      687 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:684:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-145c0-support-keyboard-navigation-Mobile-Chrome/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle form cancellation" classname="error-reporting.spec.ts" time="22.306">
<skipped>
</skipped>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should display error messages for API failures" classname="error-reporting.spec.ts" time="20.797">
<skipped>
</skipped>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support responsive design on mobile" classname="error-reporting.spec.ts" time="5.588">
<failure message="error-reporting.spec.ts:725:3 should support responsive design on mobile" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:725:3 › Enhanced Error Reporting Workflow › should support responsive design on mobile 

    Error: expect(locator).toBeVisible() failed

    Locator:  getByText('ASR Error Reporting System')
    Expected: visible
    Received: <element(s) not found>
    Timeout:  5000ms

    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for getByText('ASR Error Reporting System')


      728 |
      729 |     // Should show mobile-optimized layout
    > 730 |     await expect(page.getByText('ASR Error Reporting System')).toBeVisible();
          |                                                                ^
      731 |
      732 |     // Touch selection should work
      733 |     await selectTextInDocument(page, testData.errorText);
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:730:64

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-dcb1a-responsive-design-on-mobile-Mobile-Chrome/video.webm]]
]]>
</system-out>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should maintain accessibility standards" classname="error-reporting.spec.ts" time="5.645">
<failure message="error-reporting.spec.ts:743:3 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [Mobile Chrome] › error-reporting.spec.ts:743:3 › Enhanced Error Reporting Workflow › should maintain accessibility standards 

    Error: expect(locator).toHaveText(expected) failed

    Locator: getByRole('heading', { level: 3 })
    Expected string: "ASR Error Reporting System"
    Received: <element(s) not found>
    Timeout: 5000ms

    Call log:
      - Expect "toHaveText" with timeout 5000ms
      - waiting for getByRole('heading', { level: 3 })


      743 |   test('should maintain accessibility standards', async ({ page }) => {
      744 |     // Check for proper heading structure
    > 745 |     await expect(page.getByRole('heading', { level: 3 })).toHaveText('ASR Error Reporting System');
          |                                                           ^
      746 |
      747 |     // Check for proper form labels
      748 |     const textSelectionArea = page.locator('[role="textbox"], [aria-label*="text selection"]');
        at /home/tan/Documents/augment-projects/rag-interface/frontend/e2e/error-reporting.spec.ts:745:59

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-Mobile-Chrome/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-Mobile-Chrome/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-Mobile-Chrome/test-failed-1.png]]

[[ATTACHMENT|../test-results/error-reporting-Enhanced-E-9c9ae-ain-accessibility-standards-Mobile-Chrome/video.webm]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="error-reporting.spec.ts" timestamp="2025-09-03T08:14:21.835Z" hostname="Mobile Safari" tests="24" failures="24" skipped="0" time="0.082" errors="0">
<testcase name="Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:70:3 should complete the full 5-step error reporting workflow" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:70:3 › Complete Error Reporting Workflow › should complete the full 5-step error reporting workflow 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle multiple text selections" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:149:3 should handle multiple text selections" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:149:3 › Complete Error Reporting Workflow › should handle multiple text selections 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should set error severity levels" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:177:3 should set error severity levels" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:177:3 › Complete Error Reporting Workflow › should set error severity levels 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should add error descriptions and comments" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:195:3 should add error descriptions and comments" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:195:3 › Complete Error Reporting Workflow › should add error descriptions and comments 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should submit error reports successfully" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:207:3 should submit error reports successfully" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:207:3 › Complete Error Reporting Workflow › should submit error reports successfully 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:242:3 should validate required fields" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:242:3 › Complete Error Reporting Workflow › should validate required fields 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should save error reports as drafts" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:254:3 should save error reports as drafts" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:254:3 › Complete Error Reporting Workflow › should save error reports as drafts 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support text highlighting and annotation" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:271:3 should support text highlighting and annotation" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:271:3 › Complete Error Reporting Workflow › should support text highlighting and annotation 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should display error history and previous reports" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:294:3 should display error history and previous reports" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:294:3 › Complete Error Reporting Workflow › should display error history and previous reports 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support error report filtering and search" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:306:3 should support error report filtering and search" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:306:3 › Complete Error Reporting Workflow › should support error report filtering and search 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle file attachments for error context" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:327:3 should handle file attachments for error context" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:327:3 › Complete Error Reporting Workflow › should handle file attachments for error context 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should provide error reporting analytics" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:347:3 should provide error reporting analytics" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:347:3 › Complete Error Reporting Workflow › should provide error reporting analytics 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should support collaborative error review" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:359:3 should support collaborative error review" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:359:3 › Complete Error Reporting Workflow › should support collaborative error review 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Complete Error Reporting Workflow › should handle error reporting in different languages" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:371:3 should handle error reporting in different languages" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:371:3 › Complete Error Reporting Workflow › should handle error reporting in different languages 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:504:3 completes full error reporting workflow with enhanced components" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:504:3 › Enhanced Error Reporting Workflow › completes full error reporting workflow with enhanced components 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › supports voice input functionality" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:583:3 supports voice input functionality" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:583:3 › Enhanced Error Reporting Workflow › supports voice input functionality 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should validate required fields" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:604:3 should validate required fields" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:604:3 › Enhanced Error Reporting Workflow › should validate required fields 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support voice input functionality" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:632:3 should support voice input functionality" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:632:3 › Enhanced Error Reporting Workflow › should support voice input functionality 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle text-to-speech functionality" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:653:3 should handle text-to-speech functionality" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:653:3 › Enhanced Error Reporting Workflow › should handle text-to-speech functionality 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support keyboard navigation" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:678:3 should support keyboard navigation" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:678:3 › Enhanced Error Reporting Workflow › should support keyboard navigation 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should handle form cancellation" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:694:3 should handle form cancellation" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:694:3 › Enhanced Error Reporting Workflow › should handle form cancellation 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should display error messages for API failures" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:708:3 should display error messages for API failures" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:708:3 › Enhanced Error Reporting Workflow › should display error messages for API failures 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should support responsive design on mobile" classname="error-reporting.spec.ts" time="0.003">
<failure message="error-reporting.spec.ts:725:3 should support responsive design on mobile" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:725:3 › Enhanced Error Reporting Workflow › should support responsive design on mobile 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
<testcase name="Enhanced Error Reporting Workflow › should maintain accessibility standards" classname="error-reporting.spec.ts" time="0.004">
<failure message="error-reporting.spec.ts:743:3 should maintain accessibility standards" type="FAILURE">
<![CDATA[  [Mobile Safari] › error-reporting.spec.ts:743:3 › Enhanced Error Reporting Workflow › should maintain accessibility standards 

    Error: browserType.launch: 
    ╔══════════════════════════════════════════════════════╗
    ║ Host system is missing dependencies to run browsers. ║
    ║ Please install them with the following command:      ║
    ║                                                      ║
    ║     sudo npx playwright install-deps                 ║
    ║                                                      ║
    ║ Alternatively, use apt:                              ║
    ║     sudo apt-get install libevent-2.1-7t64\          ║
    ║         libgstreamer-plugins-bad1.0-0\               ║
    ║         libavif16                                    ║
    ║                                                      ║
    ║ <3 Playwright Team                                   ║
    ╚══════════════════════════════════════════════════════╝
]]>
</failure>
</testcase>
</testsuite>
</testsuites>