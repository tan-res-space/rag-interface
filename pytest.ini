[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    --strict-markers
    --strict-config
    --cov=src/error_reporting_service
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=90
    --asyncio-mode=auto
    -v
    --tb=short
    --durations=10

markers =
    unit: Unit tests for business logic
    integration: Integration tests for external dependencies
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer than 1 second
    database: Tests that require database connection
    kafka: Tests that require Kafka connection
    redis: Tests that require Redis connection
    api: Tests for API endpoints
    domain: Tests for domain layer
    application: Tests for application layer
    infrastructure: Tests for infrastructure layer

# Test discovery
minversion = 7.0
norecursedirs = .git .tox dist build *.egg htmlcov

# Async configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = src/error_reporting_service
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2
skip_covered = false

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
