<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="7" failures="54" skipped="0" tests="259" time="12.931" timestamp="2025-09-01T01:26:37.548059+05:30" hostname="tan-X570-AORUS-ELITE-WIFI"><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_existing_error_report_success" time="0.011"><failure message="AssertionError: assert UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967') == '85ed95ff-e17e-4a9a-a682-7f10ba5c5967'&#10; +  where UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967') = ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}).error_id&#10; +    where ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}) = GetErrorReportResponse(error_report=ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}), status='success').error_report&#10; +  and   '85ed95ff-e17e-4a9a-a682-7f10ba5c5967' = str(UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'))&#10; +    where UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967') = ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}).error_id">tests/unit/application/test_get_error_report_use_case.py:75: in test_execute_existing_error_report_success
    assert response.error_report.error_id == str(error_report.error_id)
E   AssertionError: assert UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967') == '85ed95ff-e17e-4a9a-a682-7f10ba5c5967'
E    +  where UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967') = ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}).error_id
E    +    where ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}) = GetErrorReportResponse(error_report=ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}), status='success').error_report
E    +  and   '85ed95ff-e17e-4a9a-a682-7f10ba5c5967' = str(UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'))
E    +    where UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967') = ErrorReport(error_id=UUID('85ed95ff-e17e-4a9a-a682-7f10ba5c5967'), job_id=UUID('deff0fc7-40ef-4421-ad38-f49db4c619f3'), speaker_id=UUID('22d54435-a430-4968-ab70-011833ef411a'), reported_by=UUID('c09bc70e-3a1a-41db-91f8-5e940f1c3015'), original_text='The patient has diabetis', corrected_text='The patient has diabetes', error_categories=['spelling', 'grammar', 'pronunciation'], severity_level=&lt;SeverityLevel.LOW: 'low'&gt;, start_position=0, end_position=4, error_timestamp=datetime.datetime(2025, 8, 16, 0, 41, 20, 883004), reported_at=datetime.datetime(2025, 8, 31, 19, 56, 37, 943299), context_notes='However maybe meet save listen less according.', status=&lt;ErrorStatus.PENDING: 'pending'&gt;, metadata={'audio_quality': 'good', 'background_noise': True, 'confidence_score': 0.14, 'speaker_accent': 'british', 'technical_issues': []}).error_id</failure></testcase><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_cached_error_report_success" time="0.207"><failure message="AssertionError: Expected 'find_by_id' to not have been called. Called 1 times.&#10;Calls: [call(UUID('9726af14-37b3-4477-85ad-a08783ccbfec')),&#10; call().__bool__(),&#10; call().error_id.__str__(),&#10; call().job_id.__str__(),&#10; call().speaker_id.__str__(),&#10; call().reported_by.__str__(),&#10; call().error_timestamp.isoformat(),&#10; call().reported_at.isoformat()].&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert (UUID('9726af...8783ccbfec'),) == ()&#10;  &#10;  Left contains one more item: #x1B[0mUUID(#x1B[33m'#x1B[39;49;00m#x1B[33m9726af14-37b3-4477-85ad-a08783ccbfec#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m)#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[91m- ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     UUID('9726af14-37b3-4477-85ad-a08783ccbfec'),#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:905: in assert_not_called
    raise AssertionError(msg)
E   AssertionError: Expected 'find_by_id' to not have been called. Called 1 times.
E   Calls: [call(UUID('9726af14-37b3-4477-85ad-a08783ccbfec')),
E    call().__bool__(),
E    call().error_id.__str__(),
E    call().job_id.__str__(),
E    call().speaker_id.__str__(),
E    call().reported_by.__str__(),
E    call().error_timestamp.isoformat(),
E    call().reported_at.isoformat()].

During handling of the above exception, another exception occurred:
tests/unit/application/test_get_error_report_use_case.py:114: in test_execute_cached_error_report_success
    self.mock_repository.find_by_id.assert_not_called()
E   AssertionError: Expected 'find_by_id' to not have been called. Called 1 times.
E   Calls: [call(UUID('9726af14-37b3-4477-85ad-a08783ccbfec')),
E    call().__bool__(),
E    call().error_id.__str__(),
E    call().job_id.__str__(),
E    call().speaker_id.__str__(),
E    call().reported_by.__str__(),
E    call().error_timestamp.isoformat(),
E    call().reported_at.isoformat()].
E   
E   pytest introspection follows:
E   
E   Args:
E   assert (UUID('9726af...8783ccbfec'),) == ()
E     
E     Left contains one more item: #x1B[0mUUID(#x1B[33m'#x1B[39;49;00m#x1B[33m9726af14-37b3-4477-85ad-a08783ccbfec#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m)#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[91m- ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     UUID('9726af14-37b3-4477-85ad-a08783ccbfec'),#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_unauthorized_access_denied" time="0.005" /><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_error_report_not_found" time="0.005" /><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_invalid_error_id_format" time="0.005" /><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_repository_error_handling" time="0.005" /><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_cache_error_fallback_to_repository" time="0.056" /><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_with_include_metadata_flag" time="0.004"><failure message="TypeError: GetErrorReportRequest.__init__() got an unexpected keyword argument 'include_metadata'">tests/unit/application/test_get_error_report_use_case.py:242: in test_execute_with_include_metadata_flag
    request = GetErrorReportRequest(
E   TypeError: GetErrorReportRequest.__init__() got an unexpected keyword argument 'include_metadata'</failure></testcase><testcase classname="tests.unit.application.test_get_error_report_use_case.TestGetErrorReportUseCase" name="test_execute_with_exclude_metadata_flag" time="0.004"><failure message="TypeError: GetErrorReportRequest.__init__() got an unexpected keyword argument 'include_metadata'">tests/unit/application/test_get_error_report_use_case.py:272: in test_execute_with_exclude_metadata_flag
    request = GetErrorReportRequest(
E   TypeError: GetErrorReportRequest.__init__() got an unexpected keyword argument 'include_metadata'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_basic_search_success" time="0.006"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:81: in test_execute_basic_search_success
    self.mock_repository.count_by_filters.return_value = 5
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_with_severity_filter" time="0.005"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:124: in test_execute_search_with_severity_filter
    self.mock_repository.count_by_filters.return_value = 3
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_with_category_filter" time="0.006"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:162: in test_execute_search_with_category_filter
    self.mock_repository.count_by_filters.return_value = 4
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_with_date_range_filter" time="0.005"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:203: in test_execute_search_with_date_range_filter
    self.mock_repository.count_by_filters.return_value = 3
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_with_text_search" time="0.005"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:244: in test_execute_search_with_text_search
    self.mock_repository.count_by_filters.return_value = 2
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_with_pagination" time="0.012"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:283: in test_execute_search_with_pagination
    self.mock_repository.count_by_filters.return_value = 25
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_unauthorized_access_denied" time="0.005" /><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_cached_results" time="0.006"><failure message="TypeError: '&gt;' not supported between instances of 'MagicMock' and 'int'">tests/unit/application/test_search_errors_use_case.py:346: in test_execute_search_cached_results
    response = await self.use_case.execute(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/error_reporting_service/application/use_cases/search_errors.py:79: in execute
    return self._create_response_from_cache(cached_results)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/error_reporting_service/application/use_cases/search_errors.py:311: in _create_response_from_cache
    paginated_results = PaginatedErrorReports(
&lt;string&gt;:8: in __init__
    ???
src/error_reporting_service/application/dto/responses.py:110: in __post_init__
    if self.size &gt; 0:
       ^^^^^^^^^^^^^
E   TypeError: '&gt;' not supported between instances of 'MagicMock' and 'int'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_empty_results" time="0.004"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:376: in test_execute_search_empty_results
    self.mock_repository.count_by_filters.return_value = 0
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_performance_large_dataset" time="0.033"><failure message="AttributeError: Mock object has no attribute 'count_by_filters'">tests/unit/application/test_search_errors_use_case.py:409: in test_execute_search_performance_large_dataset
    self.mock_repository.count_by_filters.return_value = 10000
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:658: in __getattr__
    raise AttributeError("Mock object has no attribute %r" % name)
E   AttributeError: Mock object has no attribute 'count_by_filters'</failure></testcase><testcase classname="tests.unit.application.test_search_errors_use_case.TestSearchErrorsUseCase" name="test_execute_search_invalid_pagination_parameters" time="0.004"><failure message="ValueError: Invalid pagination parameters">tests/unit/application/test_search_errors_use_case.py:430: in test_execute_search_invalid_pagination_parameters
    pagination=PaginationParams(page=0, size=-1),  # Invalid parameters
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;string&gt;:5: in __init__
    ???
src/error_reporting_service/application/dto/requests.py:77: in __post_init__
    raise ValueError("Invalid pagination parameters")
E   ValueError: Invalid pagination parameters</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCase" name="test_execute_valid_request_success" time="0.004" /><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCase" name="test_execute_invalid_categories_raises_error" time="0.005" /><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCase" name="test_execute_invalid_context_raises_error" time="0.005" /><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCase" name="test_execute_repository_error_propagates" time="0.004" /><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCase" name="test_execute_creates_correct_domain_entity" time="0.004" /><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCase" name="test_execute_publishes_correct_event" time="0.004" /><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_factory_generated_request" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:328: in test_execute_with_factory_generated_request
    request = SubmitErrorReportRequestFactory.create()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_medical_terminology_error" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:353: in test_execute_with_medical_terminology_error
    request = SubmitErrorReportRequestFactory.create(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_validation_warnings" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:391: in test_execute_with_validation_warnings
    request = SubmitErrorReportRequestFactory.create()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_repository_connection_error" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:425: in test_execute_with_repository_connection_error
    request = SubmitErrorReportRequestFactory.create()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_event_publishing_failure" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:447: in test_execute_with_event_publishing_failure
    request = SubmitErrorReportRequestFactory.create()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_critical_severity_error" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:473: in test_execute_with_critical_severity_error
    request = SubmitErrorReportRequestFactory.create(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_with_long_text_content" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:507: in test_execute_with_long_text_content
    request = SubmitErrorReportRequestFactory.create(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.application.test_submit_error_report_use_case.TestSubmitErrorReportUseCaseAdvanced" name="test_execute_performance_with_complex_metadata" time="0.003"><failure message="NameError: name 'SubmitErrorReportRequestFactory' is not defined">tests/unit/application/test_submit_error_report_use_case.py:555: in test_execute_performance_with_complex_metadata
    request = SubmitErrorReportRequestFactory.create(metadata=complex_metadata)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   NameError: name 'SubmitErrorReportRequestFactory' is not defined</failure></testcase><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_success" time="0.003" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_with_conservative_mode" time="0.002" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_with_aggressive_mode" time="0.002" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_respects_max_suggestions" time="0.002" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_model_failure" time="0.002" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_repository_failure" time="0.003" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_performance_tracking" time="0.103" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_with_context" time="0.002" /><testcase classname="tests.unit.correction_engine.application.test_generate_corrections_use_case.TestGenerateCorrectionsUseCase" name="test_generate_corrections_model_info_in_response" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_create_valid_confidence_score" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_create_boundary_confidence_scores" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_create_confidence_score_below_minimum_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_create_confidence_score_above_maximum_raises_error" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_confidence_score_precision" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_confidence_score_from_percentage" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreCreation" name="test_confidence_score_from_invalid_percentage_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreComparison" name="test_confidence_scores_are_comparable" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreComparison" name="test_confidence_scores_equality" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreComparison" name="test_confidence_score_sorting" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreClassification" name="test_is_high_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreClassification" name="test_is_medium_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreClassification" name="test_is_low_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreClassification" name="test_get_confidence_level" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_meets_threshold" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_to_percentage" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_to_percentage_rounded" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_combine_scores_average" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_combine_scores_weighted" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_combine_empty_scores_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_combine_mismatched_weights_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_confidence_score_immutability" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_confidence_score.TestConfidenceScoreBusinessRules" name="test_string_representation" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_create_conservative_mode" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_create_balanced_mode" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_create_aggressive_mode" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_correction_modes_are_comparable" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_from_string_valid_modes" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_from_string_case_insensitive" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_from_string_invalid_mode_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_is_more_conservative_than" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_is_more_aggressive_than" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeCreation" name="test_should_apply_correction_with_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeBusinessRules" name="test_default_mode_is_balanced" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeBusinessRules" name="test_mode_for_real_time_processing" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeBusinessRules" name="test_mode_for_batch_processing" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeBusinessRules" name="test_mode_for_high_accuracy_requirements" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeBusinessRules" name="test_correction_mode_immutability" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_mode.TestCorrectionModeBusinessRules" name="test_all_modes_have_valid_thresholds" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_valid_correction_suggestion" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_correction_suggestion_with_metadata" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_correction_suggestion_with_empty_original_text_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_correction_suggestion_with_empty_corrected_text_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_correction_suggestion_with_same_texts_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_correction_suggestion_with_empty_correction_type_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionCreation" name="test_create_correction_suggestion_with_empty_model_name_raises_error" time="0.002" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_is_high_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_should_apply_with_mode" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_get_correction_length" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_get_correction_ratio" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_is_expansion" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_is_contraction" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_get_metadata_value" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionMethods" name="test_has_metadata_key" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionComparison" name="test_suggestions_are_comparable_by_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionComparison" name="test_sort_suggestions_by_confidence" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionBusinessRules" name="test_suggestion_with_complex_metadata" time="0.001" /><testcase classname="tests.unit.correction_engine.domain.test_correction_suggestion.TestCorrectionSuggestionBusinessRules" name="test_suggestion_summary" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_create_valid_error_report" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_invalid_position_range_raises_error" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_same_original_and_corrected_text_raises_error" time="0.003" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_empty_error_categories_raises_error" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_error_report_with_optional_fields" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_error_report_equality" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEntity" name="test_error_report_string_representation" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestSeverityLevel" name="test_severity_level_values" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestSeverityLevel" name="test_severity_level_ordering" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorStatus" name="test_error_status_values" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_negative_start_position_raises_error" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_empty_original_text_raises_error" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_empty_corrected_text_raises_error" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_whitespace_only_text_raises_error" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_position_range_exceeds_text_length_raises_error" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_is_critical_method" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_calculate_error_length_method" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_get_error_text_method" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportBusinessRules" name="test_get_correction_text_method" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportFactoryIntegration" name="test_factory_creates_valid_error_reports" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportFactoryIntegration" name="test_factory_creates_medical_error_reports" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportFactoryIntegration" name="test_factory_batch_creation" time="0.002" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEdgeCases" name="test_single_character_error" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEdgeCases" name="test_maximum_text_length" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEdgeCases" name="test_unicode_text_handling" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEdgeCases" name="test_multiple_error_categories" time="0.001" /><testcase classname="tests.unit.domain.test_error_report.TestErrorReportEdgeCases" name="test_complex_metadata_handling" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_error_categories_valid_categories" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_error_categories_invalid_categories" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_error_categories_empty_list" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_error_categories_mixed_valid_invalid" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_assess_severity_medical_terminology_high" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_assess_severity_long_text_medium" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_assess_severity_short_text_low" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_assess_severity_critical_categories" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_context_integrity_valid_positions" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_context_integrity_position_out_of_bounds" time="0.001"><failure message="ValueError: position range exceeds text length">tests/unit/domain/test_validation_service.py:157: in test_validate_context_integrity_position_out_of_bounds
    error_report = self._create_test_error_report(
tests/unit/domain/test_validation_service.py:242: in _create_test_error_report
    return ErrorReport(
&lt;string&gt;:18: in __init__
    ???
src/error_reporting_service/domain/entities/error_report.py:65: in __post_init__
    self._validate_text_fields()
src/error_reporting_service/domain/entities/error_report.py:101: in _validate_text_fields
    raise ValueError("position range exceeds text length")
E   ValueError: position range exceeds text length</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_validate_context_integrity_negative_start_position" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_get_valid_categories_returns_expected_set" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_is_critical_category_true_for_patient_safety" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationService" name="test_is_critical_category_false_for_grammar" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_error_report_request_valid" time="0.002" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_error_report_request_invalid_data" time="0.001"><failure message="TypeError: SubmitErrorReportRequest.__init__() missing 1 required positional argument: 'reported_by'">tests/unit/domain/test_validation_service.py:284: in test_validate_error_report_request_invalid_data
    request = SubmitErrorReportRequest(**invalid_data)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: SubmitErrorReportRequest.__init__() missing 1 required positional argument: 'reported_by'</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_text_length_within_limits" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_text_length_exceeds_limit" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_text_length_empty_text" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_position_range_valid" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_position_range_invalid_order" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_position_range_out_of_bounds" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_severity_level_valid" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_severity_level_invalid" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_custom_categories_valid" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceAdvanced" name="test_validate_custom_categories_invalid_format" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_medical_terminology_context" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_duplicate_error_prevention" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_error_consistency_valid" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_error_consistency_invalid_mismatch" time="0.001"><failure message="ValueError: corrected_text must differ from original_text">tests/unit/domain/test_validation_service.py:508: in test_validate_error_consistency_invalid_mismatch
    error_report = ErrorReportFactory.create(
venv/lib/python3.12/site-packages/factory/base.py:539: in create
    return cls._generate(enums.CREATE_STRATEGY, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/factory/base.py:468: in _generate
    return step.build()
           ^^^^^^^^^^^^
venv/lib/python3.12/site-packages/factory/builder.py:274: in build
    instance = self.factory_meta.instantiate(
venv/lib/python3.12/site-packages/factory/base.py:320: in instantiate
    return self.factory._create(model, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/factory/base.py:509: in _create
    return model_class(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;string&gt;:18: in __init__
    ???
src/error_reporting_service/domain/entities/error_report.py:63: in __post_init__
    self._validate_text_difference()
src/error_reporting_service/domain/entities/error_report.py:78: in _validate_text_difference
    raise ValueError("corrected_text must differ from original_text")
E   ValueError: corrected_text must differ from original_text</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_context_window_sufficient" time="0.001" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_context_window_insufficient" time="0.001"><failure message="assert True is False&#10; +  where True = ValidationResult(is_valid=True, errors=[], warnings=[]).is_valid">tests/unit/domain/test_validation_service.py:552: in test_validate_context_window_insufficient
    assert result.is_valid is False
E   assert True is False
E    +  where True = ValidationResult(is_valid=True, errors=[], warnings=[]).is_valid</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_speaker_consistency" time="0.002" /><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_temporal_consistency" time="0.001"><failure message="AssertionError: assert False is True&#10; +  where False = ValidationResult(is_valid=False, errors=[ValidationError(code='FUTURE_TIMESTAMP', message='Reported timestamp cannot be in the future', field='reported_at')], warnings=[]).is_valid">tests/unit/domain/test_validation_service.py:586: in test_validate_temporal_consistency
    assert result.is_valid is True
E   AssertionError: assert False is True
E    +  where False = ValidationResult(is_valid=False, errors=[ValidationError(code='FUTURE_TIMESTAMP', message='Reported timestamp cannot be in the future', field='reported_at')], warnings=[]).is_valid</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServiceBusinessRules" name="test_validate_temporal_consistency_invalid_future_error" time="0.001"><failure message="assert False&#10; +  where False = any(&lt;generator object TestErrorValidationServiceBusinessRules.test_validate_temporal_consistency_invalid_future_error.&lt;locals&gt;.&lt;genexpr&gt; at 0x73ab4b610ad0&gt;)">tests/unit/domain/test_validation_service.py:601: in test_validate_temporal_consistency_invalid_future_error
    assert any(
E   assert False
E    +  where False = any(&lt;generator object TestErrorValidationServiceBusinessRules.test_validate_temporal_consistency_invalid_future_error.&lt;locals&gt;.&lt;genexpr&gt; at 0x73ab4b610ad0&gt;)</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServicePerformance" name="test_validate_large_batch_performance" time="2.657"><failure message="AssertionError: assert False is True&#10; +  where False = ValidationResult(is_valid=False, errors=[ValidationError(code='FUTURE_TIMESTAMP', message='Error timestamp cannot be in the future', field='error_timestamp'), ValidationError(code='TEMPORAL_INCONSISTENCY', message='Error timestamp cannot be after reported timestamp', field='timestamps'), ValidationError(code='FUTURE_TIMESTAMP', message='Error timestamp cannot be in the future', field='error_timestamp'), ValidationError(code='TEMPORAL_INCONSISTENCY', message='Error timestamp cannot be after reported timestamp', field='timestamps')], warnings=[]).is_valid">tests/unit/domain/test_validation_service.py:622: in test_validate_large_batch_performance
    assert result.is_valid is True
E   AssertionError: assert False is True
E    +  where False = ValidationResult(is_valid=False, errors=[ValidationError(code='FUTURE_TIMESTAMP', message='Error timestamp cannot be in the future', field='error_timestamp'), ValidationError(code='TEMPORAL_INCONSISTENCY', message='Error timestamp cannot be after reported timestamp', field='timestamps'), ValidationError(code='FUTURE_TIMESTAMP', message='Error timestamp cannot be in the future', field='error_timestamp'), ValidationError(code='TEMPORAL_INCONSISTENCY', message='Error timestamp cannot be after reported timestamp', field='timestamps')], warnings=[]).is_valid</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServicePerformance" name="test_validate_long_text_performance" time="0.002"><failure message="ValueError: original_text cannot exceed 5000 characters">tests/unit/domain/test_validation_service.py:629: in test_validate_long_text_performance
    error_report = ErrorReportFactory.create(
venv/lib/python3.12/site-packages/factory/base.py:539: in create
    return cls._generate(enums.CREATE_STRATEGY, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/factory/base.py:468: in _generate
    return step.build()
           ^^^^^^^^^^^^
venv/lib/python3.12/site-packages/factory/builder.py:274: in build
    instance = self.factory_meta.instantiate(
venv/lib/python3.12/site-packages/factory/base.py:320: in instantiate
    return self.factory._create(model, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/factory/base.py:509: in _create
    return model_class(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;string&gt;:18: in __init__
    ???
src/error_reporting_service/domain/entities/error_report.py:65: in __post_init__
    self._validate_text_fields()
src/error_reporting_service/domain/entities/error_report.py:94: in _validate_text_fields
    raise ValueError("original_text cannot exceed 5000 characters")
E   ValueError: original_text cannot exceed 5000 characters</failure></testcase><testcase classname="tests.unit.domain.test_validation_service.TestErrorValidationServicePerformance" name="test_validation_caching_behavior" time="0.001" /><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_save_error_report_success" time="0.006"><failure message="TypeError: 'coroutine' object does not support the asynchronous context manager protocol">tests/unit/infrastructure/test_postgresql_adapter.py:64: in test_save_error_report_success
    result = await self.adapter.save_error_report(error_report)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/error_reporting_service/infrastructure/adapters/database/postgresql/adapter.py:57: in save_error_report
    async with self._session_factory() as session:
E   TypeError: 'coroutine' object does not support the asynchronous context manager protocol</failure></testcase><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_find_error_by_id_found" time="0.005"><failure message="AssertionError: Expected 'execute' to have been called once. Called 0 times.">../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:923: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'execute' to have been called once. Called 0 times.

During handling of the above exception, another exception occurred:
tests/unit/infrastructure/test_postgresql_adapter.py:96: in test_find_error_by_id_found
    mock_session.execute.assert_called_once()
E   AssertionError: Expected 'execute' to have been called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_find_error_by_id_not_found" time="0.004"><failure message="AttributeError: 'coroutine' object has no attribute 'error_id'">tests/unit/infrastructure/test_postgresql_adapter.py:113: in test_find_error_by_id_not_found
    result = await self.adapter.find_error_by_id(error_id)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/error_reporting_service/infrastructure/adapters/database/postgresql/adapter.py:89: in find_error_by_id
    return self._model_to_entity(model) if model else None
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/error_reporting_service/infrastructure/adapters/database/postgresql/adapter.py:247: in _model_to_entity
    error_id=model.error_id,
             ^^^^^^^^^^^^^^
E   AttributeError: 'coroutine' object has no attribute 'error_id'</failure></testcase><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_find_errors_by_speaker" time="0.004"><failure message="AttributeError: 'coroutine' object has no attribute 'all'">tests/unit/infrastructure/test_postgresql_adapter.py:142: in test_find_errors_by_speaker
    result = await self.adapter.find_errors_by_speaker(speaker_id)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/error_reporting_service/infrastructure/adapters/database/postgresql/adapter.py:116: in find_errors_by_speaker
    models = result.scalars().all()
             ^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'coroutine' object has no attribute 'all'</failure></testcase><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_health_check_success" time="0.004"><failure message="AssertionError: Expected 'execute' to have been called once. Called 0 times.">../../../miniconda3/envs/common-env/lib/python3.12/unittest/mock.py:923: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'execute' to have been called once. Called 0 times.

During handling of the above exception, another exception occurred:
tests/unit/infrastructure/test_postgresql_adapter.py:162: in test_health_check_success
    mock_session.execute.assert_called_once()
E   AssertionError: Expected 'execute' to have been called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_health_check_failure" time="0.004"><failure message="assert True is False">tests/unit/infrastructure/test_postgresql_adapter.py:177: in test_health_check_failure
    assert result is False
E   assert True is False</failure></testcase><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_begin_transaction" time="0.003" /><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_commit_transaction" time="0.003" /><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_rollback_transaction" time="0.003" /><testcase classname="tests.unit.infrastructure.test_postgresql_adapter.TestPostgreSQLAdapter" name="test_get_connection_info" time="0.003" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_success" time="0.006" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_with_cache_hit" time="0.005" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_ml_model_failure" time="0.004" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_storage_failure" time="0.005" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_with_different_types" time="0.007" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_with_custom_model_version" time="0.005" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_with_complex_metadata" time="0.005" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_performance_tracking" time="0.106" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_text_hash_generation" time="0.006" /><testcase classname="tests.unit.rag_integration.application.test_generate_embedding_use_case.TestGenerateEmbeddingUseCase" name="test_generate_embedding_model_info_in_response" time="0.005" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultCreation" name="test_create_valid_similarity_result" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultCreation" name="test_similarity_result_with_default_distance_metric" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultCreation" name="test_similarity_result_with_invalid_score_raises_error" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultCreation" name="test_similarity_result_with_empty_text_raises_error" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultCreation" name="test_similarity_result_with_whitespace_text_raises_error" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_is_above_threshold_with_score_above" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_is_above_threshold_with_score_below" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_is_above_threshold_with_equal_score" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_get_confidence_level_high" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_get_confidence_level_medium" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_get_confidence_level_low" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_get_metadata_value_existing_key" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_get_metadata_value_missing_key" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_has_metadata_key_existing" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultMethods" name="test_has_metadata_key_missing" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultComparison" name="test_similarity_results_are_comparable" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultComparison" name="test_sort_similarity_results_descending" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultBusinessRules" name="test_similarity_result_with_complex_metadata" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultBusinessRules" name="test_similarity_result_with_perfect_score" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_similarity_result.TestSimilarityResultBusinessRules" name="test_similarity_result_with_zero_score" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingCreation" name="test_create_valid_vector_embedding" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingCreation" name="test_vector_embedding_with_empty_text_raises_error" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingCreation" name="test_vector_embedding_with_whitespace_text_raises_error" time="0.001" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingCreation" name="test_vector_embedding_with_invalid_dimensions_raises_error" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingCreation" name="test_vector_embedding_with_empty_vector_raises_error" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingMethods" name="test_validate_dimensions_with_correct_size" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingMethods" name="test_validate_dimensions_with_incorrect_size" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingMethods" name="test_calculate_magnitude_with_unit_vector" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingMethods" name="test_calculate_magnitude_with_known_vector" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingMethods" name="test_normalize_vector" time="0.003" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingMethods" name="test_normalize_zero_vector_returns_original" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingBusinessRules" name="test_embedding_with_maximum_text_length" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingBusinessRules" name="test_embedding_with_text_exceeding_maximum_length_raises_error" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingBusinessRules" name="test_embedding_with_unicode_text" time="0.002" /><testcase classname="tests.unit.rag_integration.domain.test_vector_embedding.TestVectorEmbeddingBusinessRules" name="test_embedding_with_complex_metadata" time="0.002" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserCreation" name="test_create_valid_user" time="0.002" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserCreation" name="test_create_user_with_empty_username_raises_error" time="0.002" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserCreation" name="test_create_user_with_invalid_email_raises_error" time="0.001" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserCreation" name="test_user_is_active" time="0.001" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserCreation" name="test_user_has_role" time="0.001" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserCreation" name="test_user_can_perform_action" time="0.001" /><testcase classname="tests.unit.user_management.domain.test_user.TestUserMethods" name="test_get_user_summary" time="0.001" /><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_successful_authentication" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_user_not_found" time="0.004" /><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_inactive_user" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_locked_account" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_invalid_password" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_locks_account_after_5_failures" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_system_error" time="0.004"><failure message="AssertionError: assert 'Invalid username or password' == 'Authenticati... system error'&#10;  &#10;  #x1B[0m#x1B[91m- Authentication failed due to system error#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ Invalid username or password#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">tests/unit/user_management_service/test_authenticate_user_use_case.py:297: in test_authentication_system_error
    assert response.message == "Authentication failed due to system error"
E   AssertionError: assert 'Invalid username or password' == 'Authenticati... system error'
E     
E     #x1B[0m#x1B[91m- Authentication failed due to system error#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ Invalid username or password#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_updates_user_on_success" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_authenticate_user_use_case.TestAuthenticateUserUseCase" name="test_authentication_generates_correct_tokens" time="0.002"><error message="failed on setup with &quot;TypeError: UserProfile() takes no arguments&quot;">tests/unit/user_management_service/test_authenticate_user_use_case.py:77: in valid_user
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</error></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_creation_with_valid_data" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:27: in test_user_creation_with_valid_data
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_permissions_qa_personnel" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:47: in test_user_permissions_qa_personnel
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_permissions_mts_personnel" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:66: in test_user_permissions_mts_personnel
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_permissions_system_admin" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:86: in test_user_permissions_system_admin
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_permissions_multiple_roles" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:102: in test_user_permissions_multiple_roles
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_is_active_when_status_active_and_has_roles" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:123: in test_user_is_active_when_status_active_and_has_roles
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_is_not_active_when_status_inactive" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:139: in test_user_is_not_active_when_status_inactive
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_is_not_active_when_account_locked" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:155: in test_user_is_not_active_when_account_locked
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_is_not_active_when_no_roles" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:172: in test_user_is_not_active_when_no_roles
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_login_success_updates_fields" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:185: in test_user_login_success_updates_fields
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_login_failure_increments_attempts" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:207: in test_user_login_failure_increments_attempts
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_login_failure_locks_account_after_5_attempts" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:225: in test_user_login_failure_locks_account_after_5_attempts
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_role_management" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:245: in test_user_role_management
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_account_activation" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:267: in test_user_account_activation
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_account_suspension" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:285: in test_user_account_suspension
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_get_full_name" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:304: in test_user_get_full_name
    profile = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.user_management_service.test_user_entity.TestUserEntity" name="test_user_equality" time="0.001"><failure message="TypeError: UserProfile() takes no arguments">tests/unit/user_management_service/test_user_entity.py:315: in test_user_equality
    profile1 = UserProfile(
E   TypeError: UserProfile() takes no arguments</failure></testcase><testcase classname="tests.unit.verification_service.domain.test_verification_result.TestVerificationResultCreation" name="test_create_valid_verification_result" time="0.001" /><testcase classname="tests.unit.verification_service.domain.test_verification_result.TestVerificationResultCreation" name="test_create_verification_result_with_empty_verified_by_raises_error" time="0.002" /><testcase classname="tests.unit.verification_service.domain.test_verification_result.TestVerificationResultCreation" name="test_verification_result_is_verified" time="0.001" /><testcase classname="tests.unit.verification_service.domain.test_verification_result.TestVerificationResultCreation" name="test_verification_result_is_high_quality" time="0.001" /><testcase classname="tests.unit.verification_service.domain.test_verification_result.TestVerificationResultMethods" name="test_get_verification_summary" time="0.002" /></testsuite></testsuites>